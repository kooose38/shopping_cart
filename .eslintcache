[{"C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\index.js":"1","C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\App.jsx":"2","C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\Filter.jsx":"3","C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\components\\index.jsx":"4","C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\components\\Products.jsx":"5","C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\components\\Cart.jsx":"6","C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\Util.js":"7","C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\components\\HomeModal.jsx":"8"},{"size":232,"mtime":1609919757743,"results":"9","hashOfConfig":"10"},{"size":3942,"mtime":1609989119006,"results":"11","hashOfConfig":"10"},{"size":1059,"mtime":1609984679362,"results":"12","hashOfConfig":"10"},{"size":145,"mtime":1609992410163,"results":"13","hashOfConfig":"10"},{"size":4215,"mtime":1609997808314,"results":"14","hashOfConfig":"10"},{"size":5429,"mtime":1609990188270,"results":"15","hashOfConfig":"10"},{"size":115,"mtime":1609922433426,"results":"16","hashOfConfig":"10"},{"size":1614,"mtime":1609993339605,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"124opdm",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\index.js",[],["37","38"],"C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\App.jsx",["39","40","41"],"import React, { Component } from 'react';\r\nimport data from \"./data.json\";\r\nimport { Cart, Products } from \"./components/index\";\r\nimport Filter from './Filter';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      products: data.products,\r\n      cart: localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : [],\r\n      size: \"\",\r\n      sort: \"\",\r\n    }\r\n    this.filterProducts = this.filterProducts.bind(this);\r\n    this.sortProducts = this.sortProducts.bind(this);\r\n    this.addToCart = this.addToCart.bind(this);\r\n    this.removeFormCart = this.removeFormCart.bind(this);\r\n    this.createOrder = this.createOrder.bind(this);\r\n  }\r\n\r\n  createOrder(order) {\r\n    alert(`${order.name}様、注文が完了しました。`)\r\n  }\r\n\r\n  removeFormCart(item) {\r\n    const cart = [...this.state.cart];\r\n\r\n    const index = cart.findIndex(cartItem => cartItem._id === item._id);\r\n    if (cart[index].count > 1) {\r\n      cart[index].count--;\r\n    } else if (cart[index].count === 1) {\r\n      cart.splice(index, 1);\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      cart: cart\r\n    })\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n\r\n  }\r\n\r\n  addToCart(product) {\r\n    const cart = [...this.state.cart];\r\n    //既に同じ商品があるか判定    \r\n    const index = cart.findIndex(cart => cart._id === product._id);\r\n    if (index === -1) {\r\n      cart.push({ ...product, count: 1 });\r\n    } else {\r\n      cart[index].count++;\r\n    }\r\n    this.setState({\r\n      cart: cart\r\n    })\r\n    //ローカルにカートの更新情報を保持　データベースがないため\r\n    //DEVTOOLS : Application localStorage で確認\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n  };\r\n\r\n  filterProducts(e) {\r\n    const sizes = e.target.value;\r\n    const products = [...data.products];\r\n    if (sizes === \"\") {\r\n      this.setState({\r\n        size: sizes,\r\n        products: products,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        size: sizes,\r\n        //配列からe.target.valueと同じ文字列を含んだものだけ抽出 indexOf() 存在していなければ-1\r\n        products: products.filter(product => product.availableSizes.indexOf(sizes) != -1)\r\n      })\r\n    }\r\n  }\r\n  sortProducts(e) {\r\n    const sort = e.target.value;\r\n    const products = [...data.products];\r\n    if (sort === \"\") {\r\n      this.setState({\r\n        sort: sort,\r\n        products: products,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        sort: sort,\r\n        products: products.sort((a, b) => {\r\n          if (sort === \"lowest\") {\r\n            if (a.price > b.price) {\r\n              return 1\r\n            } else {\r\n              return -1\r\n            }\r\n          }\r\n          if (sort === \"highest\") {\r\n            if (a.price < b.price) {\r\n              return 1\r\n            } else {\r\n              return -1\r\n            }\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-container\">\r\n        <header>\r\n          <a href=\"/\">React Shopping Cart</a>\r\n        </header>\r\n        <main>\r\n          <div className=\"content\">\r\n            <div className=\"main\">\r\n              <Filter\r\n                count={this.state.products.length}\r\n                size={this.state.size}\r\n                sort={this.state.sort}\r\n                filterProducts={this.filterProducts}\r\n                sortProducts={this.sortProducts}\r\n              />\r\n              <Products products={this.state.products} addToCart={this.addToCart} />\r\n            </div>\r\n            <div className=\"sidebar\">\r\n              <Cart cart={this.state.cart} removeFormCart={this.removeFormCart} createOrder={this.createOrder} />\r\n            </div>\r\n          </div>\r\n        </main>\r\n        <footer>\r\n          All rigth is reserced\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\Filter.jsx",["42"],"import React, { Component } from 'react'\r\n\r\nconst Filter = (props) => {\r\n   return (\r\n      <div className=\"filter\">\r\n         <div className=\"filter-result\">{props.count}</div>\r\n         <div className=\"filter-sort\">Order {\" \"}\r\n            <select value={props.sort} onChange={(e) => props.sortProducts(e)}>\r\n               <option value=\"\">Latest</option>\r\n               <option value=\"lowest\">Lowest</option>\r\n               <option value=\"highest\">Higthes</option>\r\n            </select>\r\n         </div>\r\n         <div className=\"filter-size\">Filter {\" \"}\r\n            <select value={props.size} onChange={(e) => props.filterProducts(e)}>\r\n               <option value=\"\">All</option>\r\n               <option value=\"XS\">XS</option>\r\n               <option value=\"S\">S</option>\r\n               <option value=\"M\">M</option>\r\n               <option value=\"L\">L</option>\r\n               <option value=\"XL\">XL</option>\r\n               <option value=\"XXL\">XXL</option>\r\n            </select>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Filter;","C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\components\\index.jsx",[],"C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\components\\Products.jsx",["43","44"],"C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\components\\Cart.jsx",["45"],"C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\Util.js",[],"C:\\Users\\KICS14\\Desktop\\my-project\\create_react_app\\src\\components\\HomeModal.jsx",["46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":74,"column":84,"nodeType":"57","messageId":"58","endLine":74,"endColumn":86},{"ruleId":"59","severity":1,"message":"60","line":89,"column":40,"nodeType":"61","messageId":"62","endLine":89,"endColumn":42},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":26},{"ruleId":"51","severity":1,"message":"63","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"64","line":1,"column":27,"nodeType":"53","messageId":"54","endLine":1,"endColumn":38},{"ruleId":"65","severity":1,"message":"66","line":29,"column":7,"nodeType":"67","endLine":29,"endColumn":19,"suggestions":"68"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":26},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'item'. Either exclude it or remove the dependency array.","ArrayExpression",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [cart]",{"range":"74","text":"75"},[847,859],"[cart]"]